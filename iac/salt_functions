#!/usr/bin/env bash

#
# Maintenance
#

# remove master key from minion in case of master upgrade/change
# [$1] key location (otherwise: /etc/salt/pki/minion/minion_master.pub)
salt_remove_master_key() {
    rm ${1-/etc/salt/pki/minion/minion_master.pub}
}

#
# salt-master utils
#

# remotely remove master's key from minion
# $1 minion id
# [$2] minion_master key location on minion (otherwise: /etc/salt/pki/minion/minion_master.pub)
salt_rekey_minion() {
    salt "$1" cmd.run "rm -rf ${2-/etc/salt/pki/minion/minion_master.pub}"
    salt-key -d "$1"
}

salt_running_jobs() {
    salt-run jobs.active
}

# list files on master file server
# useful to debug per env file locations
# $1 saltenv
salt_show_fileserver() {
    salt-run fileserver.file_list saltenv=${1-base}
}

# show complete state that will be applied (rendered state)
# $1 state to display
# [$2] saltenv (base otherwise)
salt_show_sls() {
    if [ -z $1 ]; then
        echo "usage: $0 <state> [saltenv]"
        return 1
    fi
    salt '*' state.show_sls $1 saltenv=${2-base}
}

salt_refresh_pillar() {
    salt '*' saltutil.refresh_pillar
}

salt_sync() {
    salt '*' saltutil.sync_all
}
