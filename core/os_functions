#!/usr/bin/env bash

##############
# Alternatives
##############

show_all_manually_configured_alternatives() {
    for i in $(ls /etc/alternatives); do
        LANG=C update-alternatives --display $i 2>/dev/null;
    done | awk '/manual.mode/{print $1}'
}

# Manually update java alternatives
# Don't use this method. Use dedicated ppa oracle repo instead.
# $1 jinfo file name
# $2 priority
update_java_alternatives() {
    cat /usr/lib/jvm/".$1.jinfo" | grep -E '^(jre|jdk|hl)' | awk -v prio=$2 '{print "/usr/bin/" $2 " " $2 " " $3 " " prio " \n"}' | xargs -t -n4 sudo update-alternatives --verbose --install
    update-java-alternatives -s $1
}

####################
# package management
####################

# list packages installed explicitly by current user (using apt/aptitude)
# doesn't include upgraded packages
show_packages_installed_by_current_user() {
    readonly local user=$(whoami)
    cat /var/log/apt/history.log | awk -v USER="$user" 'BEGIN {
        FS="\n"
        RS=""
        user_pattern="Requested-By:.*" USER
        install_pattern="Install:.*"
    } $2 ~ user_pattern && NF > 3 && $3 ~ install_pattern {print $3 "\n"}' | sed 's/([^()]*)//g'
}

# list packages upgraded at given date
# $1 date formatted like /var/log/dpkg.log
# [$2] time pattern (otherwise not used) formatted HH:MM:SS
show_packages_upgraded_at() {
    if [ -z $2 ]; then
        awk -v DATE="$1" '$1==DATE && $3=="upgrade"' /var/log/dpkg.log
    else
        awk -v DATE="$1" -v TIME="$2" '$1==DATE && $2 ~ TIME && $3=="upgrade"' /var/log/dpkg.log
    fi
}

# check if previous versions of upgraded packages are still available in cache
# $1 date formatted like /var/log/dpkg.log
# [$2] time pattern (otherwise not used) formatted HH:MM:SS
show_previous_packages_versions() {
    if [ -z $2 ]; then
        awk -v DATE="$1" '$1==DATE && $3=="upgrade" {gsub(/:/, "%3a", $5); split($4, f, ":"); print "/var/cache/apt/archives/" f[1] "_" $5 "_" f[2] ".deb"}' /var/log/dpkg.log | xargs -r ls -ld
    else
        awk -v DATE="$1" -v TIME="$2" '$1==DATE && $2 ~ TIME && $3=="upgrade" {gsub(/:/, "%3a", $5); split($4, f, ":"); print "/var/cache/apt/archives/" f[1] "_" $5 "_" f[2] ".deb"}' /var/log/dpkg.log | xargs -r ls -ld
    fi
}

######
# Misc
######

show_init_system() {
    cat /proc/1/comm
}

# force group of created files in given directory
# $1 directory
# $2 desired group
force_group_in_dir() {
    chgrp -R $2 $1
    chmod -R g+s $1
}
